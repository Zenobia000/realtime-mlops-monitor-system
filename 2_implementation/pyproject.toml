[tool.poetry]
name = "model-api-monitoring"
version = "1.0.0"
description = "即時監控機器學習模型 API 的性能與狀態"
authors = ["Vibe Coder <vibe.coder@example.com>"]
readme = "README.md"
packages = [{include = "api", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"

# FastAPI 核心套件
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
python-multipart = "^0.0.6"

# 資料庫相關
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.29.0"
alembic = "^1.12.1"

# Redis 客戶端
redis = "^5.0.1"

# RabbitMQ 客戶端
pika = "^1.3.2"

# 數據驗證與序列化
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# WebSocket 支援
websockets = "^12.0"

# HTTP 客戶端
httpx = "^0.25.2"
aiohttp = "^3.9.1"

# 日誌與監控
structlog = "^23.2.0"
prometheus-client = "^0.19.0"

# 工具套件
python-dotenv = "^1.0.0"
typer = "^0.16.0"
rich = "^13.7.0"
aio-pika = "^9.5.5"

[tool.poetry.group.dev.dependencies]
# 測試套件
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"

# 開發工具
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
isort = "^5.12.0"

# 開發服務器
watchdog = "^3.0.0"

[tool.poetry.group.docs.dependencies]
# 文檔生成
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"

[tool.poetry.scripts]
# 定義命令行腳本
dev-server = "api.main:main"
setup-env = "setup_env:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# 工具配置

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pika.*",
    "redis.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
] 